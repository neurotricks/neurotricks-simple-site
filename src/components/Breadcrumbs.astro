---
const { url } = Astro;

// Универсальное удаление абсолютного пути и расширения
function normalizePath(filePath) {
  return filePath
    .replace(/^.*\/pages/, '') // удаляем всё до /pages
    .replace(/\/index$/, '') // убираем /index
    .replace(/\.(astro|md)$/, '') || '/';
}

const allPages = await Astro.glob(['../pages/**/*.astro', '../pages/**/*.md']);

const currentPage = allPages.find(page => normalizePath(page.file) === url.pathname);

// Берём title из frontmatter, если есть
const pageTitle = currentPage?.frontmatter?.title;

// Карта перевода сегментов
function formatLabel(segment) {
  const map = {
    blog: 'Блог',
    lab: 'Лаборатория',
    portfolio: 'Портфолио',
    contacts: 'Контакты',
  };
  return map[segment] || segment.charAt(0).toUpperCase() + segment.slice(1);
}

function generateBreadcrumbs(pathname) {
  const segments = pathname.split('/').filter(Boolean);
  const crumbs = segments.map((segment, i) => {
    const href = '/' + segments.slice(0, i + 1).join('/');
    const isLast = i === segments.length - 1;
    const label = isLast && pageTitle ? pageTitle : formatLabel(segment);
    return { href, label };
  });
  return [{ href: '/', label: 'Главная' }, ...crumbs];
}

const breadcrumbs = generateBreadcrumbs(url.pathname);
const lastIndex = breadcrumbs.length - 1;

---
<nav class="text-sm text-gray-400 py-2 mb-6">
  <ul class="flex flex-wrap items-center gap-1">
    {breadcrumbs.map((crumb, index) => (
      <li class="inline-flex items-center gap-1" key={crumb.href + index}>
        {index === 0 ? (
          <a href={crumb.href} class="flex items-center gap-1 hover:text-white transition">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-cyan-400" viewBox="0 0 20 20" fill="currentColor">
              <path d="M10.707 1.293a1 1 0 00-1.414 0l-7 7A1 1 0 003 9h1v6a2 2 0 002 2h2a1 1 0 001-1v-4h2v4a1 1 0 001 1h2a2 2 0 002-2V9h1a1 1 0 00.707-1.707l-7-7z" />
            </svg>
            {crumb.label}
          </a>
        ) : index !== lastIndex ? (
          <a href={crumb.href} class="hover:text-white transition bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500">
            {crumb.label}
          </a>
        ) : (
          <span class="text-gray-500">{crumb.label}</span>
        )}
        {index < lastIndex && (
          <span class="text-gray-600 select-none">›</span>
        )}
      </li>
    ))}
  </ul>
</nav>
