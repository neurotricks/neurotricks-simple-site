---
import { getBreadcrumbs } from 'astro-breadcrumbs';

const { url } = Astro;
const rawCrumbs = getBreadcrumbs(url.pathname);

// Убираем подряд идущие дубли (по label и href)
const breadcrumbs = rawCrumbs.filter((crumb, index, arr) => {
  if (index === 0) return true;
  const prev = arr[index - 1];
  return !(crumb.label === prev.label && crumb.href === prev.href);
});

const lastIndex = breadcrumbs.length - 1;
---
<nav class="text-sm breadcrumbs text-gray-400 py-2 mb-6">
  <ul class="flex flex-wrap items-center gap-1">
    {breadcrumbs.map((crumb, index) => (
      <li class="inline-flex items-center gap-1" key={crumb.href + index}>
        {index === 0 ? (
          <a href={crumb.href} aria-label="Главная" class="flex items-center gap-1 hover:text-white transition">
            <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 text-cyan-400" viewBox="0 0 20 20" fill="currentColor">
              <path d="M10.707 1.293a1 1 0 00-1.414 0l-7 7A1 1 0 003 9h1v6a2 2 0 002 2h2a1 1 0 001-1v-4h2v4a1 1 0 001 1h2a2 2 0 002-2V9h1a1 1 0 00.707-1.707l-7-7z" />
            </svg>
          </a>
        ) : index !== lastIndex ? (
          <a href={crumb.href} class="hover:text-white transition bg-clip-text text-transparent bg-gradient-to-r from-cyan-400 to-purple-500">
            {crumb.label}
          </a>
        ) : (
          <span class="text-gray-500">{crumb.label}</span>
        )}

        {index < lastIndex && <span class="text-gray-600">›</span>}
      </li>
    ))}
  </ul>
</nav>
